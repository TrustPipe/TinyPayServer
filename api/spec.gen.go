// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.5.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
