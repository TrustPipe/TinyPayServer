// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.5.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
