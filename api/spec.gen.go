// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.5.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"AAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
